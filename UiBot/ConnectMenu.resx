<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAABhWlDQ1BJQ0MgcHJvZmlsZQAAKM+VkTtI
        w1AUhv+miq+Kgx1EHDJUJ7uoFccSxSJYKG2FVh1MbvqCJg1Jiouj4Fpw8LFYdXBx1tXBVRAEHyCuLk6K
        LlLiuUmhRajggcv9+O/9f849FxDqZaZZXVFA020zGZPETHZV7HlFHwbgQwQRmVlGPLWYRsf6uqebVHdh
        noX/1aCasxjgE4mjzDBt4g3i2U3b4LxPHGRFWSU+J540qUHiR64rHr9xLrgs8MygmU7OEweJxUIbK23M
        iqZGPEMcUjWd8oWMxyrnLc5aucqaffIXBnL6SorrtMYQwxLiSECEgipKKMNGmHadFAtJOpc6+Eddf4Jc
        CrlKYORYQAUaZNcP/ge/Z2vlp6e8pIAEdL84zsc40LMLNGqO833sOI0TwP8MXOktf6UOzH2SXmtpoSNg
        aBu4uG5pyh5wuQOMPBmyKbuSn5aQzwPvZ/RNWWD4Fuhf8+bWPMfpA5CmWS3fAAeHwESBstc7vLu3fW5/
        3nHnB+kH+DBy3OxAk9sAAAAJcEhZcwAALiIAAC4iAari3ZIAAAAHdElNRQfnCQsCAhlIXXrGAAAAGXRF
        WHRDb21tZW50AENyZWF0ZWQgd2l0aCBHSU1QV4EOFwAADRZJREFUeF7t3b+rVHcax3Etjf4BgVQWIukt
        go2QP0AINoLLRQhpgiASYrPkfxAj2u9iITYb2K1WbExsFySghVUCNmFZEHcXbLLPo9/gzXF076+5d+Z8
        Xg+8IDkzc+bcsXjeXu+dObQX86c//uF42SjXy73ytDwvvwIAO9a7tHdq79besb1rj4/1ezBTF/BR+ap8
        XxZdNACwHL17ewd/NNby8qee7ONyrfgbPgAcrN7FvZM/Hmt676dO/kH5pvyzLLoIAOBg9G7uHf3BWNt7
        M3XCT8vfy6InBQBWQ+/qT8f63t3Uib4oP40TAwCrrXf2F2ON72zqBFfLf8YJAYD10Lv76ljn25t+YPnv
        OBEAsF56h28vAuoB/W1/f/MHgPXWu3xr/xxQd+wf+PNv/gAwD73T3/+DgXWH/lU/P+0PAPPSu/3dvyJY
        N/bvEC56IACw3r4Z6/73Uzf0O/x5kx8AmKfe8W+/Y2Ad7LcSXPQAAGAero21/3rqQH+wj/f2B4B5613/
        5gOE6n/6E4UW3REAmJevxvp/FQA+0hcAMnz/2/I/PrkBAJi34x0AG5ODAMC8bXQAXJ8cBADm7XoHwL3J
        QQBg3u51ADydHAQA5u1pB4Df/weALM87ABbdAADMmAAAgEACAAACCQAACCQAACCQAACAQAIAAAIJAAAI
        JAAAIJAAAIBAAgAAAgkAAAgkAAAgkAAAgEACAAACCQAACCQAACCQAACAQAIAAAIJAAAIJAAAIJAAAIBA
        AgAAAgkAAAgkAAAgkAAAgEACAAACCQAACCQAACCQAACAQAIAAAIJAAAIJAAAIJAAAIBAAgAAAgkAAAgk
        AAAgkAAAgEACAAACCQAACCQAACCQAACAQAIAAAIJAAAIJAAAIJAAAIBAAgAAAgkAAAgkAAAgkAAAgEAC
        AAACCQAACCQAACCQAACAQAIAAAIJAAAIJAAAIJAAAIBAAgAAAgkAAAgkAAAgkAAAgEACAAACCQAACCQA
        ACCQAACAQAIAAAIJAAAIJAAAIJAAAIBAAgAAAgkAAAgkAAAgkAAAgEACAAACCQAACCQAACDQob/95c+/
        AgBZBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIA
        ABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEA
        AIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAA
        EEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAA
        gQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQ
        SAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACB
        BAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBI
        AABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEE
        AAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgA
        AEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQA
        AAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAA
        QCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAA
        BBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABA
        IAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAE
        EgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAg
        AQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQS
        AAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCAB
        AACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIA
        ABBIAABAIAEAAIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEA
        AIEEAAAEEgAAEEgAAEAgAQAAgQQAAAQSAAAQSAAAQCABAACBBAAABBIAABBIAABAIAEAAIEEAAAEEgAA
        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
</value>
  </data>
</root>